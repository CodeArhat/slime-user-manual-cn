* 七、小技巧


** 7.1 连接到远程Lisp

*** 7.1.1 设置Lisp镜像

如果你不想通过一般的基于Emacs的方式加载swank，只需要加载swank-load.lisp文件就可以了。只需要在一个运行中的Lisp镜像[1]里执行以下代码：

#+BEGIN_SRC emacs-lisp
  (load "/path/to/swank-loader.lisp")
#+END_SRC

现在，我们需要做的就是启动swank服务器。在第一个例子里，我们假设使用默认配置。

#+BEGIN_SRC emacs-lisp
  (swank:create-server)
#+END_SRC

由于我们将要使用ssh[2]来建立链接并且只打开了一个端口，我们不希望swank使用另一个端口作为输出（目前这在swank里是默认的）：

#+BEGIN_SRC emacs-lisp
  (setf swank:*use-dedicated-output-stream* nil)
#+END_SRC

如果你有其它特别的需求（例如在结束后重新连接到swank），请查看swank:create-server的其它参数。其中的一些参数如下：

- :PORT

  指定服务器所监听的端口号（默认端口：4005）

- :STYLE

  见 6.2.1 通信模式

- :DONE-CLOSE

  布尔值，指明了在服务器在接受了第一个连接后是否还会接收其它连接（默认值：nil）。对于你希望可以随时连接的长期运行的Lisp进程，指定:done-close t

- :CODING-SYSTEM

  字符串，指明了Emacs和Lisp之间进行通讯的编码

更加完整的实例如下：

#+BEGIN_SRC emacs-lisp
  (swank:create-server :port 4005  :dont-close t :coding-system "utf-8-unix")
#+END_SRC

在Emacs端，你会进行类似如下的设置来连接到同一台机器上的Lisp镜像：

#+BEGIN_SRC emacs-lisp
  (setq slime-net-coding-system 'utf-8-unix)
  (slime-connect "127.0.0.1" 4005)
#+END_SRC


*** 7.1.2 设置Emacs


*** 7.1.3 设置翻译路径名
** 7.2 重定向全局IO到REPL
** 7.3 自动连接到Slime


[1] Slime也提供了一个功能相同的ASDF系统定义

[2] 有一种不使用ssh来连接的方法，但是其副作用是将允许所有东西连接到你的Lisp镜像，所以我们不讨论这种方式
